version: "3.9"
name: restaurant
services:
  kitchen-service:
    container_name: "kitchen-service_db"
    image: postgres:13.3
    environment:
      POSTGRES_DB: "kitchen-service"
      POSTGRES_USER: "test"
      POSTGRES_PASSWORD: "test"
    ports:
      - "5437:5432"

  waiter-service:
    container_name: "waiter-service_db"
    image: postgres:13.3
    environment:
      POSTGRES_DB: "waiter-service"
      POSTGRES_USER: "test"
      POSTGRES_PASSWORD: "test"
    ports:
      - "5438:5432"

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.6.1
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    ports:
      - 22181:2181
    networks:
      - kafka_network

  kafka:
    image: docker.io/bitnami/kafka:2.5.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_HEAP_OPTS: -Xmx512m -Xms512m
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://${DOCKER_HOST_IP:-localhost}:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    networks:
      - kafka_network

  kafka-ui:
    image: provectuslabs/kafka-ui
    build:
      network: host
    container_name: kafka-ui
    ports:
      - 8090:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka
      - zookeeper
    networks:
      - kafka_network
networks:
  kafka_network:
    driver: bridge

